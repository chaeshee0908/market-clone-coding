[{"/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/index.js":"1","/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/App.js":"2","/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/reportWebVitals.js":"3","/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/main/index.js":"4","/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/upload/index.js":"5","/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/product/index.js":"6"},{"size":595,"mtime":1629269733696,"results":"7","hashOfConfig":"8"},{"size":1148,"mtime":1629302525432,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1628423288933,"results":"10","hashOfConfig":"8"},{"size":2305,"mtime":1630162849865,"results":"11","hashOfConfig":"8"},{"size":4518,"mtime":1630322889545,"results":"12","hashOfConfig":"8"},{"size":1346,"mtime":1630162129885,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1jkm57j",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/index.js",[],["31","32"],"/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/App.js",["33"],"import 'antd/dist/antd.css';\nimport './App.css';\nimport MainPageComponent from \"./main/index.js\"\nimport {Switch, Route, Link, useHistory} from 'react-router-dom';\nimport UploadPage from \"./upload\";\nimport ProductPage from \"./product\";\nimport {Button} from \"antd\";\nimport {DownloadOutlined} from \"@ant-design/icons\"\nfunction App() {\n  const history = useHistory();\n  return (\n    <div>\n      <div id=\"header\">\n        <div id=\"header-area\">\n          <Link to=\"/\">\n            <img src=\"/images/icons/logo.png\" />\n          </Link>\n          <Button size=\"large\" onClick={function(){\n            history.push('/upload');\n          }}\n          icon={<DownloadOutlined />}>상품 업로드</Button>\n        </div>\n      </div>\n      <div id=\"body\">\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <MainPageComponent />\n          </Route>\n          <Route exact={true} path=\"/products/:id\">\n            <ProductPage />\n          </Route>\n          <Route exact={true} path=\"/upload\">\n            <UploadPage />\n          </Route>\n        </Switch>\n      </div>\n      <div id=\"footer\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/reportWebVitals.js",[],"/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/main/index.js",["34","35","36"],"import './index.css';\nimport axios from \"axios\";\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\n\ndayjs.extend(relativeTime);\n\nfunction MainPage(){\n    const [products, setProducts] = React.useState([]);\n    React.useEffect(\n        function(){\n            axios.get('http://localhost:8080/products')\n            .then(function(result){\n                const products = result.data.products;\n                setProducts(products);\n            })\n            .catch(function(error){\n                console.error('에러 발생 : ',error);\n            });\n        },[]);\n\n    return (\n        <div>\n            <div id=\"banner\">\n                <img src=\"images/banners/banner1.png\" />\n            </div>\n            <h1>판매되는 상품들</h1>\n            <div id=\"product-list\">\n                {products.map(function(product, index){\n                    return (\n                        <div className=\"product-card\">\n                            <Link className=\"product-link\" to={`/products/${product.id}`}>\n                                <div>\n                                    <img className=\"product-img\" src={product.imageUrl}/>\n                                </div>\n                                <div className=\"product-contents\">\n                                    <span className=\"product-name\">{product.name}</span>\n                                    <span className=\"product-price\">{product.price}원</span>\n                                    <div className=\"product-footer\">\n                                        <div className=\"product-seller\">\n                                            <img className=\"product-avatar\" src = \"images/icons/avatar.png\" />\n                                            <span>{product.seller}</span>\n                                        </div>\n                                        <span className=\"product-date\">{dayjs(product.createdAt).fromNow()}</span>\n                                    </div>\n                                </div>\n                            </Link>\n                        </div>\n                    );\n                    })\n                }    \n            </div>\n        </div>\n    );\n}\n\nexport default MainPage;","/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/upload/index.js",["37","38","39"],"import {Form, Divider, Input, InputNumber, Button, Upload} from \"antd\";\nimport './index.css';\nimport {ForkOutlined} from \"@ant-design/icons\";\nimport { useState } from 'react';\n\nfunction UploadPage(){\n    const [imageUrl, setImageUrl] = useState(null);\n    // lambda함수 적용\n    const onSubmit = (values) => {\n        console.log(values);\n    };\n    const onChangeImage = (info) => {\n        // uploading : 파일을 업로드해서 네트워크 요청이 끝날 때 까지의 과정 => 별다른 처리를 해주지 않음\n        if (info.file.status === 'uploading'){\n            return;\n        }\n        // done : 완료가 되면 \n        if (info.file.status === 'done'){\n            const response = info.file.response;\n            const imageUrl = response.imageUrl;\n            setImageUrl(imageUrl);\n        }\n    }\n    return (\n        <div id=\"upload-container\">\n            <Form name=\"상품 업로드\" onFinish={onSubmit}>\n                <Form.Item name=\"upload\" label={<div className=\"upload-label\">상품 사진</div>}>\n                    <Upload \n                        name=\"image\" \n                        action=\"http://localhost:8080/image\" \n                        listType=\"picture\"\n                        showUploadList={false}\n                        onChange={onChangeImage}\n                    >\n                        {imageUrl ? (\n                            <img id=\"upload-img\" src={`http://localhost:8080/${imageUrl}`} /> \n                            ) : (\n                                <div id=\"upload-img-placeholder\">\n                                    <img src=\"/images/icons/camera.png\" />\n                                    <span>이미지를 업로드해주세요.</span>\n                                </div>\n                            )\n                        }\n                    </Upload>\n                </Form.Item>\n                {/* 선으로 나눠주는 용도 */}\n                <Divider />\n                <Form.Item\n                    name=\"seller\"\n                    label={<div className=\"upload-label\">판매자 명</div>}\n                    // required : true -> 아래의 입력이 꼭 들어가야하는가\n                    // message -> 입력을 안 했을 때 뜨는 메세지\n                    rules={[{required: true, message: '판매자 이름을 입력해주세요'}]}\n                >\n                    <Input \n                        className=\"upload-name\" \n                        size=\"large\" \n                        placeholder=\"이름을 입력해주세요.\" \n                    />\n                </Form.Item>\n                <Divider />\n                <Form.Item\n                    name=\"name\"\n                    label={<div className=\"upload-label\">상품 이름</div>}\n                    rules={[{required: true, message: '상품 이름을 입력해주세요'}]}\n                >\n                    <Input className=\"upload-name\" size=\"large\" placeholder=\"상품 정보를 입력해주세요.\" />\n                </Form.Item>\n                <Divider />\n                <Form.Item\n                    name=\"price\"\n                    label={<div className=\"upload-label\">상품 가격</div>}\n                    rules={[{required: true, message: '상품 가격을 입력해 주세요.'}]}\n                >\n                    <InputNumber \n                        defaultValue={0}\n                        className=\"upload-price\" \n                        size=\"large\" \n                    />\n                </Form.Item>\n                <Divider />\n                <Form.Item\n                    name=\"description\"\n                    label={<div className=\"upload-label\">상품 소개</div>}\n                    rules={[{required: true, message: '상품 소개를 입력해주세요'}]}\n                >\n                    <Input.TextArea \n                        size=\"large\" \n                        id=\"product-description\" \n                        showCount \n                        maxLength={300}\n                        placeholder=\"상품 소개를 적어주세요.\" \n                    />\n                </Form.Item>\n                <Form.Item>\n                    {/* htmlType=\"submit\"으로 제출 버튼이라는 것을 해줘야함 */}\n                    <Button id=\"submit-button\" size=\"large\" htmlType=\"submit\">\n                        상품 등록\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\nexport default UploadPage;","/Users/chaeseunghui/Desktop/full-stack/market-clone-coding/grab-market-web/src/product/index.js",["40","41","42"],"import {useParams} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {useEffect, useState} from \"react\";\nimport './index.css';\n\nfunction ProductPage() {\n    const {id} = useParams();\n    const [product, setProduct] = useState(null);\n    useEffect(function(){\n        axios\n        .get(`https://localhost:8080/products/${id}`)\n        .then(function(result){\n            setProduct(result.data.product);\n        })\n        .catch(function(error){\n            console.error(error);\n        });\n    },[]); \n\n    //  비동기 호출로 인한 오류(product에 값이 아닌 null로 존재할 때)를 막기 위함\n    if(product === null){\n        return <h1>상품 정보를 받고 있습니다...</h1>\n    }\n\n    return (\n        <div>\n            <div id=\"image-box\">\n                <img src={\"/\"+product.imageUrl} />\n            </div>\n            <div id=\"profile-box\">\n                <img src=\"/images/icons/avatar.png\" />\n                <span>{product.seller}</span>\n            </div>\n            <div id=\"contents-box\">\n                <div id=\"name\">{product.name}</div>\n                <div id=\"price\">{product.price}원</div>\n                <div id=\"createAt\">2021년 8월 18일</div>\n                <div id=\"description\">{product.description}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductPage;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":16,"column":13,"nodeType":"49","endLine":16,"endColumn":49},{"ruleId":"47","severity":1,"message":"48","line":27,"column":17,"nodeType":"49","endLine":27,"endColumn":57},{"ruleId":"47","severity":1,"message":"48","line":36,"column":37,"nodeType":"49","endLine":36,"endColumn":90},{"ruleId":"47","severity":1,"message":"48","line":43,"column":45,"nodeType":"49","endLine":43,"endColumn":111},{"ruleId":"50","severity":1,"message":"51","line":3,"column":9,"nodeType":"52","messageId":"53","endLine":3,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":36,"column":29,"nodeType":"49","endLine":36,"endColumn":94},{"ruleId":"47","severity":1,"message":"48","line":39,"column":37,"nodeType":"49","endLine":39,"endColumn":75},{"ruleId":"54","severity":1,"message":"55","line":18,"column":7,"nodeType":"56","endLine":18,"endColumn":9,"suggestions":"57"},{"ruleId":"47","severity":1,"message":"48","line":28,"column":17,"nodeType":"49","endLine":28,"endColumn":51},{"ruleId":"47","severity":1,"message":"48","line":31,"column":17,"nodeType":"49","endLine":31,"endColumn":55},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ForkOutlined' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [id]",{"range":"63","text":"64"},[508,510],"[id]"]